services:
  # PostgreSQL Database для Supabase
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: supabase
      POSTGRES_USER: supabase
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-supabase123}
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database_schema.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    ports:
      - "5432:5432"

  # Supabase (самостоятельно размещённый)
  supabase:
    image: supabase/supabase:latest
    container_name: supabase-server
    restart: unless-stopped
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://supabase:${POSTGRES_PASSWORD:-supabase123}@postgres:5432/supabase
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-token-with-at-least-32-characters}
      ANON_KEY: ${SUPABASE_ANON_KEY:-your-anon-key}
      SERVICE_ROLE_KEY: ${SUPABASE_SERVICE_KEY:-your-service-role-key}
      API_EXTERNAL_URL: http://localhost:8000
      SUPABASE_PUBLIC_URL: http://supabase:8000
    networks:
      - app-network
    ports:
      - "8000:8000"
    volumes:
      - supabase_data:/var/lib/supabase

  # N8N Workflow Automation
  n8n:
    image: n8nio/n8n:latest
    container_name: n8n-server
    restart: unless-stopped
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-password123}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - WEBHOOK_URL=http://n8n:5678/
      - GENERIC_TIMEZONE=Europe/Moscow
    networks:
      - app-network
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock

  # Telegram Bot
  telegram-bot:
    build: .
    container_name: innokentiy-bot
    restart: unless-stopped
    depends_on:
      - supabase
      - n8n
    env_file:
      - config.env
    environment:
      # Telegram Bot
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      
      # Supabase (внутренняя сеть)
      - SUPABASE_URL=http://supabase:8000
      - SUPABASE_KEY=${SUPABASE_SERVICE_KEY:-your-service-role-key}
      
      # OpenAI
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      
      # N8N Webhooks (внутренняя сеть)
      - N8N_NICHE_WEBHOOK_URL=http://n8n:5678/webhook/niche
      - N8N_TOPIC_WEBHOOK_URL=http://n8n:5678/webhook/topic
      - N8N_POST_WEBHOOK_URL=http://n8n:5678/webhook/post
      
      # Admin Notifications
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      - ENABLE_ADMIN_NOTIFICATIONS=${ENABLE_ADMIN_NOTIFICATIONS:-True}
      
      # Bot Configuration
      - MAX_USERS=${MAX_USERS:-1000}
      - DEBUG=${DEBUG:-False}
      
    volumes:
      - ./logs:/app/logs
      - ./config.env:/app/config.env:ro
    
    networks:
      - app-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Ограничения ресурсов
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    
    # Логирование
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    driver: bridge
    name: innokentiy-network

volumes:
  postgres_data:
    driver: local
  supabase_data:
    driver: local
  n8n_data:
    driver: local
  bot-logs:
    driver: local
