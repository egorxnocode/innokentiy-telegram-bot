#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞
# Usage: ./scripts/status.sh

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

echo -e "${PURPLE}ü§ñ –°–¢–ê–¢–£–° TELEGRAM –ë–û–¢–ê${NC}"
echo -e "${PURPLE}========================${NC}"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
echo -e "\n${CYAN}üê≥ Docker:${NC}"
if command -v docker &> /dev/null; then
    echo "  ‚úÖ Docker —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version | cut -d' ' -f3)"
else
    echo "  ‚ùå Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

if command -v docker-compose &> /dev/null; then
    echo "  ‚úÖ Docker Compose —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker-compose --version | cut -d' ' -f3)"
else
    echo "  ‚ùå Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo -e "\n${CYAN}üì¶ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:${NC}"
if docker-compose ps | grep -q "innokentiy-bot"; then
    status=$(docker-compose ps telegram-bot | grep telegram-bot | awk '{print $4}')
    if [[ "$status" == "Up" ]]; then
        echo "  ‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞ –∑–∞–ø—É—â–µ–Ω"
    else
        echo "  ‚ö†Ô∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞: $status"
    fi
else
    echo "  ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞—Ö
if docker-compose ps | grep -q "telegram-bot"; then
    echo -e "\n${CYAN}üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:${NC}"
    docker-compose ps
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ health check
echo -e "\n${CYAN}‚ù§Ô∏è Health Check:${NC}"
if curl -s http://localhost:8080/health > /dev/null 2>&1; then
    health_response=$(curl -s http://localhost:8080/health)
    echo "  ‚úÖ Health check –æ—Ç–≤–µ—á–∞–µ—Ç"
    echo "  üìã –û—Ç–≤–µ—Ç: $health_response"
else
    echo "  ‚ùå Health check –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
echo -e "\n${CYAN}üíæ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤:${NC}"
if docker-compose ps | grep -q "innokentiy-bot"; then
    container_id=$(docker-compose ps -q telegram-bot)
    if [[ -n "$container_id" ]]; then
        stats=$(docker stats --no-stream --format "table {{.CPUPerc}}\t{{.MemUsage}}" $container_id | tail -1)
        echo "  üìà CPU/Memory: $stats"
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo -e "\n${CYAN}üìã –õ–æ–≥–∏ (–ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏):${NC}"
if docker-compose ps | grep -q "innokentiy-bot"; then
    errors=$(docker-compose logs --tail=100 telegram-bot 2>&1 | grep -i -E "(error|exception)" | tail -3)
    if [[ -n "$errors" ]]; then
        echo "  ‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏:"
        echo "$errors" | sed 's/^/    /'
    else
        echo "  ‚úÖ –û—à–∏–±–æ–∫ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 100 —Å—Ç—Ä–æ–∫–∞—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    fi
else
    echo "  ‚ùå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ç–µ–π
echo -e "\n${CYAN}üåê Docker —Å–µ—Ç–∏:${NC}"
if docker network ls | grep -q "services-network"; then
    echo "  ‚úÖ –°–µ—Ç—å services-network —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
else
    echo "  ‚ö†Ô∏è –°–µ—Ç—å services-network –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo -e "\n${CYAN}‚öôÔ∏è –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:${NC}"
if [[ -f "config.env" ]]; then
    echo "  ‚úÖ –§–∞–π–ª config.env –Ω–∞–π–¥–µ–Ω"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    source config.env
    vars_check=(
        "TELEGRAM_BOT_TOKEN:Telegram Bot Token"
        "SUPABASE_URL:Supabase URL"
        "ADMIN_CHAT_ID:Admin Chat ID"
        "N8N_NICHE_WEBHOOK_URL:N8N Niche Webhook"
        "N8N_TOPIC_WEBHOOK_URL:N8N Topic Webhook"
        "N8N_POST_WEBHOOK_URL:N8N Post Webhook"
    )
    
    for var_check in "${vars_check[@]}"; do
        var_name="${var_check%%:*}"
        var_desc="${var_check##*:}"
        
        if [[ -n "${!var_name}" ]]; then
            echo "  ‚úÖ $var_desc –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        else
            echo "  ‚ùå $var_desc –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        fi
    done
else
    echo "  ‚ùå –§–∞–π–ª config.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤
echo -e "\n${CYAN}üìÅ –§–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏:${NC}"
important_files=(
    "main.py:–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª"
    "bot.py:Telegram Bot"
    "database.py:–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    "requirements.txt:–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
    "Dockerfile:Docker —Ñ–∞–π–ª"
    "docker-compose.yml:Docker Compose"
)

for file_check in "${important_files[@]}"; do
    file_name="${file_check%%:*}"
    file_desc="${file_check##*:}"
    
    if [[ -f "$file_name" ]]; then
        echo "  ‚úÖ $file_desc –Ω–∞–π–¥–µ–Ω"
    else
        echo "  ‚ùå $file_desc –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
done

if [[ -d "logs" ]]; then
    log_size=$(du -h logs/ 2>/dev/null | tail -1 | cut -f1 || echo "0B")
    echo "  üìã –ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤: $log_size"
else
    echo "  üìã –ü–∞–ø–∫–∞ –ª–æ–≥–æ–≤ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ"
fi

# –ò—Ç–æ–≥–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å
echo -e "\n${PURPLE}üéØ –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:${NC}"

if docker-compose ps | grep -q "innokentiy-bot" && curl -s http://localhost:8080/health > /dev/null 2>&1; then
    echo -e "  ${GREEN}‚úÖ –ë–û–¢ –†–ê–ë–û–¢–ê–ï–¢ –ù–û–†–ú–ê–õ–¨–ù–û${NC}"
    echo "  üìã –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
    echo "    ./scripts/logs.sh follow    - –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤"
    echo "    ./scripts/restart.sh soft   - –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫"
    echo "    ./scripts/stop.sh           - –û—Å—Ç–∞–Ω–æ–≤–∫–∞"
elif docker-compose ps | grep -q "innokentiy-bot"; then
    echo -e "  ${YELLOW}‚ö†Ô∏è –ë–û–¢ –ó–ê–ü–£–©–ï–ù, –ù–û –ï–°–¢–¨ –ü–†–û–ë–õ–ï–ú–´${NC}"
    echo "  üîç –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ./scripts/logs.sh errors"
else
    echo -e "  ${RED}‚ùå –ë–û–¢ –ù–ï –ó–ê–ü–£–©–ï–ù${NC}"
    echo "  üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ./scripts/deploy.sh"
fi
